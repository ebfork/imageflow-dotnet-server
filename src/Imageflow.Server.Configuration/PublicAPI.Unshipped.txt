Imageflow.Server.Configuration.DeploymentEnvironment
Imageflow.Server.Configuration.DeploymentEnvironment.Development = 2 -> Imageflow.Server.Configuration.DeploymentEnvironment
Imageflow.Server.Configuration.DeploymentEnvironment.Production = 0 -> Imageflow.Server.Configuration.DeploymentEnvironment
Imageflow.Server.Configuration.DeploymentEnvironment.Staging = 1 -> Imageflow.Server.Configuration.DeploymentEnvironment
Imageflow.Server.Configuration.IAbstractFileMethods
Imageflow.Server.Configuration.IAbstractFileMethods.DirectoryExists(string! path) -> bool
Imageflow.Server.Configuration.IAbstractFileMethods.FileExists(string! path) -> bool
Imageflow.Server.Configuration.IAbstractFileMethods.ReadAllText(string! path) -> string!
Imageflow.Server.Configuration.IAppConfigurator
Imageflow.Server.Configuration.IAppConfigurator.ConfigureApp(Microsoft.AspNetCore.Builder.IApplicationBuilder! app, Microsoft.AspNetCore.Hosting.IWebHostEnvironment! env) -> void
Imageflow.Server.Configuration.IAppConfigurator.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> void
Imageflow.Server.Configuration.IAppConfigurator.GetComputedConfiguration(bool redactSecrets) -> System.Collections.Generic.Dictionary<string!, string!>!
Imageflow.Server.Configuration.IAppConfigurator.RestartWhenThisFileChanges.get -> bool
Imageflow.Server.Configuration.ITomlParseResult
Imageflow.Server.Configuration.ITomlParseResult.GetAppConfigurator() -> Imageflow.Server.Configuration.IAppConfigurator!
Imageflow.Server.Configuration.TomlParser
Imageflow.Server.Configuration.TomlParser.TomlParser() -> void
Imageflow.Server.Configuration.TomlParserContext
Imageflow.Server.Configuration.TomlParserContext.ActiveEnvironment.get -> Imageflow.Server.Configuration.DeploymentEnvironment
Imageflow.Server.Configuration.TomlParserContext.ActiveEnvironment.init -> void
Imageflow.Server.Configuration.TomlParserContext.AppVariables.get -> System.Collections.Generic.Dictionary<string!, string!>!
Imageflow.Server.Configuration.TomlParserContext.AppVariables.init -> void
Imageflow.Server.Configuration.TomlParserContext.Filesystem.get -> Imageflow.Server.Configuration.IAbstractFileMethods!
Imageflow.Server.Configuration.TomlParserContext.Filesystem.init -> void
Imageflow.Server.Configuration.TomlParserContext.GetEnvironmentVariable.get -> System.Func<string!, string?>!
Imageflow.Server.Configuration.TomlParserContext.GetEnvironmentVariable.init -> void
Imageflow.Server.Configuration.TomlParserContext.TomlParserContext(Imageflow.Server.Configuration.DeploymentEnvironment activeEnvironment, System.Collections.Generic.Dictionary<string!, string!>! appVariables, System.Func<string!, string?>! getEnvironmentVariable, Imageflow.Server.Configuration.IAbstractFileMethods? filesystem) -> void
Imageflow.Server.Configuration.TomlParserContext.TomlParserContext(Microsoft.AspNetCore.Hosting.IWebHostEnvironment! env) -> void
static Imageflow.Server.Configuration.TomlParser.LoadAndParse(string! path, Imageflow.Server.Configuration.TomlParserContext! context) -> Imageflow.Server.Configuration.ITomlParseResult!
static Imageflow.Server.Configuration.TomlParser.Parse(string! tomlText, string! sourcePath, Imageflow.Server.Configuration.TomlParserContext! context) -> Imageflow.Server.Configuration.ITomlParseResult!