Imageflow.Server.Storage.RemoteReader.RemoteReaderBlob
Imageflow.Server.Storage.RemoteReader.RemoteReaderBlob.Dispose() -> void
Imageflow.Server.Storage.RemoteReader.RemoteReaderBlob.Exists.get -> bool?
Imageflow.Server.Storage.RemoteReader.RemoteReaderBlob.LastModifiedDateUtc.get -> System.DateTime?
Imageflow.Server.Storage.RemoteReader.RemoteReaderService
Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceExtensions
Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions
Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.IgnorePrefixCase.get -> bool
Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.IgnorePrefixCase.set -> void
Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.RemoteReaderServiceOptions() -> void
~Imageflow.Server.Storage.RemoteReader.RemoteReaderBlob.OpenRead() -> System.IO.Stream
~Imageflow.Server.Storage.RemoteReader.RemoteReaderService.Fetch(string virtualPath) -> System.Threading.Tasks.Task<Imazen.Common.Storage.IBlobData>
~Imageflow.Server.Storage.RemoteReader.RemoteReaderService.GetPrefixes() -> System.Collections.Generic.IEnumerable<string>
~Imageflow.Server.Storage.RemoteReader.RemoteReaderService.RemoteReaderService(Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions options, Microsoft.Extensions.Logging.ILogger<Imageflow.Server.Storage.RemoteReader.RemoteReaderService> logger, System.Net.Http.IHttpClientFactory httpFactory) -> void
~Imageflow.Server.Storage.RemoteReader.RemoteReaderService.SupportsPath(string virtualPath) -> bool
~Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.AddPrefix(string prefix) -> Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions
~Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.HttpClientSelector.get -> System.Func<System.Uri, string>
~Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.HttpClientSelector.set -> void
~Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.SigningKey.get -> string
~Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.SigningKey.set -> void
~Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.SigningKeys.get -> System.Collections.Generic.IEnumerable<string>
~Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions.SigningKeys.set -> void
~static Imageflow.Server.Storage.RemoteReader.RemoteReaderService.EncodeAndSignUrl(string url, string key) -> string
~static Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceExtensions.AddImageflowRemoteReaderService(this Microsoft.Extensions.DependencyInjection.IServiceCollection services, Imageflow.Server.Storage.RemoteReader.RemoteReaderServiceOptions options) -> Microsoft.Extensions.DependencyInjection.IServiceCollection